
import React, { useEffect, useState } from 'react';
import { ChevronRight, Play, Pause, ArrowLeft, ArrowRight, Moon, Sun, Github, Linkedin, Mail, Shield } from 'lucide-react';
import { Chart as ChartJS, CategoryScale, LinearScale, BarElement, ArcElement, LineElement, PointElement, Title, Tooltip, Legend } from 'chart.js';
import { Bar, Pie, Line } from 'react-chartjs-2';

// Register Chart.js components
ChartJS.register(
  CategoryScale,
  LinearScale,
  BarElement,
  ArcElement,
  LineElement,
  PointElement,
  Title,
  Tooltip,
  Legend
);

const LoadingScreen = ({ onComplete }: { onComplete: () => void }) => {
  const [time, setTime] = useState(0);
  const [showL, setShowL] = useState(false);

  useEffect(() => {
    const timer = setInterval(() => {
      setTime(prev => prev + 0.1);
    }, 100);

    const lTimer = setTimeout(() => {
      setShowL(true);
    }, 500);

    const completeTimer = setTimeout(() => {
      onComplete();
    }, 3000);

    return () => {
      clearInterval(timer);
      clearTimeout(lTimer);
      clearTimeout(completeTimer);
    };
  }, [onComplete]);

  return (
    <div className="fixed inset-0 bg-black z-50 flex items-center justify-center">
      <div className="absolute bottom-8 left-8 bg-white text-black p-4 font-mono text-2xl min-w-[200px] text-center">
        {time.toFixed(1)}ms
      </div>
      <div className="text-white text-8xl font-bold animate-pulse">
        {showL && <div className="animate-bounce">L</div>}
      </div>
    </div>
  );
};

const HoverChart = ({ type, title, data }: { type: 'bar' | 'pie' | 'line', title: string, data: any }) => {
  const chartProps = {
    data,
    options: {
      responsive: true,
      maintainAspectRatio: false,
      plugins: {
        legend: {
          position: 'top' as const,
        },
        title: {
          display: true,
          text: title
        },
      },
    },
  };

  return (
    <div className="absolute inset-0 bg-black bg-opacity-90 flex items-center justify-center z-10 opacity-0 group-hover:opacity-100 transition-opacity duration-300">
      <div className="bg-white p-6 rounded-lg w-80 h-60">
        {type === 'bar' && <Bar {...chartProps} />}
        {type === 'pie' && <Pie {...chartProps} />}
        {type === 'line' && <Line {...chartProps} />}
      </div>
    </div>
  );
};

const Index = () => {
  const [loading, setLoading] = useState(true);
  const [currentPage, setCurrentPage] = useState(1);
  const [darkMode, setDarkMode] = useState(false);
  const [currentSlide, setCurrentSlide] = useState(0);
  const [currentTab, setCurrentTab] = useState('Billing');
  const [currentCustomerTab, setCurrentCustomerTab] = useState('PERPLEXITY');
  const [isPlaying, setIsPlaying] = useState(false);

  useEffect(() => {
    const savedMode = localStorage.getItem('darkMode');
    if (savedMode) {
      setDarkMode(JSON.parse(savedMode));
    }
  }, []);

  useEffect(() => {
    localStorage.setItem('darkMode', JSON.stringify(darkMode));
  }, [darkMode]);

  const toggleDarkMode = () => {
    setDarkMode(!darkMode);
  };

  const barData = {
    labels: ['Asia', 'Europe', 'Americas', 'Africa', 'Oceania'],
    datasets: [{
      label: 'Population (millions)',
      data: [4641, 747, 1018, 1340, 45],
      backgroundColor: ['rgba(54, 162, 235, 0.8)', 'rgba(255, 99, 132, 0.8)', 'rgba(255, 205, 86, 0.8)', 'rgba(75, 192, 192, 0.8)', 'rgba(153, 102, 255, 0.8)']
    }]
  };

  const pieData = {
    labels: ['Housing', 'Food', 'Transportation', 'Entertainment', 'Other'],
    datasets: [{
      data: [30, 25, 20, 15, 10],
      backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF']
    }]
  };

  const lineData = {
    labels: ['2000', '2005', '2010', '2015', '2020', '2025'],
    datasets: [{
      label: 'Growth Trend',
      data: [10, 25, 40, 60, 80, 95],
      borderColor: 'rgb(75, 192, 192)',
      tension: 0.1
    }]
  };

  const slides = [
    "https://images.unsplash.com/photo-1649972904349-6e44c42644a7?w=800&h=600&fit=crop",
    "https://images.unsplash.com/photo-1488590528505-98d2b5aba04b?w=800&h=600&fit=crop",
    "https://images.unsplash.com/photo-1518770660439-4636190af475?w=800&h=600&fit=crop"
  ];

  const nextSlide = () => {
    setCurrentSlide((prev) => (prev + 1) % slides.length);
  };

  const prevSlide = () => {
    setCurrentSlide((prev) => (prev - 1 + slides.length) % slides.length);
  };

  const themeClass = darkMode 
    ? 'bg-slate-900 text-white' 
    : 'bg-gradient-to-br from-blue-900 via-blue-800 to-blue-900 text-white';

  if (loading) {
    return <LoadingScreen onComplete={() => setLoading(false)} />;
  }

  return (
    <div className={`min-h-screen transition-colors duration-300 ${themeClass}`}>
      {/* Dark/Light Mode Toggle */}
      <button
        onClick={toggleDarkMode}
        className="fixed top-4 right-4 z-40 p-3 rounded-full bg-white bg-opacity-10 backdrop-blur-sm border border-white border-opacity-20 hover:bg-opacity-20 transition-all duration-300"
      >
        {darkMode ? <Sun className="w-6 h-6" /> : <Moon className="w-6 h-6" />}
      </button>

      {/* Page 1: Hero + Hover Graphs + AI Section */}
      {currentPage === 1 && (
        <div className="min-h-screen">
          {/* Hero Section */}
          <div className="container mx-auto px-6 py-16">
            {/* Rating Cards */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-16 max-w-6xl mx-auto">
              <div className="bg-white bg-opacity-10 backdrop-blur-sm rounded-lg p-4 text-center border border-white border-opacity-20">
                <div className="flex items-center justify-center mb-2">
                  <span className="text-yellow-400 mr-1">‚≠ê</span>
                  <span className="text-lg font-bold">4.8 rating on</span>
                </div>
                <div className="text-sm opacity-90">Capterra</div>
              </div>
              
              <div className="bg-white bg-opacity-10 backdrop-blur-sm rounded-lg p-4 text-center border border-white border-opacity-20">
                <div className="flex items-center justify-center mb-2">
                  <span className="text-yellow-400 mr-1">‚≠ê</span>
                  <span className="text-lg font-bold">4.8 rating on</span>
                </div>
                <div className="text-sm opacity-90">G2</div>
              </div>
              
              <div className="bg-white bg-opacity-10 backdrop-blur-sm rounded-lg p-4 text-center border border-white border-opacity-20">
                <div className="flex items-center justify-center mb-2">
                  <span className="text-yellow-400 mr-1">‚≠ê</span>
                  <span className="text-lg font-bold">350+ reviews on</span>
                </div>
                <div className="text-sm opacity-90">Xero</div>
              </div>
              
              <div className="bg-white bg-opacity-10 backdrop-blur-sm rounded-lg p-4 text-center border border-white border-opacity-20">
                <div className="flex items-center justify-center mb-2">
                  <span className="text-yellow-400 mr-1">‚≠ê</span>
                  <span className="text-lg font-bold">550+ reviews on</span>
                </div>
                <div className="text-sm opacity-90">QuickBooks</div>
              </div>
            </div>

            {/* Main Heading */}
            <div className="text-center mb-16 max-w-5xl mx-auto">
              <h1 className="text-4xl md:text-6xl font-bold mb-8 leading-tight">
                Create reports, forecasts,<br />
                dashboards & consolidations
              </h1>
            </div>

            {/* Hover Interaction Section */}
            <div className="text-center mb-16">
              <div className="grid grid-cols-1 md:grid-cols-3 gap-8 max-w-4xl mx-auto">
                {[
                  { type: 'bar' as const, title: 'Population', data: barData },
                  { type: 'pie' as const, title: 'Expense', data: pieData },
                  { type: 'line' as const, title: 'Decade Trend', data: lineData }
                ].map((chart, index) => (
                  <div key={index} className="relative group bg-white bg-opacity-10 backdrop-blur-sm rounded-lg p-6 h-48 cursor-pointer border border-white border-opacity-20 hover:border-opacity-40 transition-all duration-300">
                    <h3 className="text-xl font-semibold mb-4">{chart.title}</h3>
                    <p className="opacity-80 text-sm">Hover to view {chart.type} chart</p>
                    <HoverChart type={chart.type} title={chart.title} data={chart.data} />
                  </div>
                ))}
              </div>
            </div>

            {/* AI Section */}
            <div className="text-center mb-16">
              <div className="flex items-center justify-center mb-6">
                <span className="text-2xl mr-3">‚ú®</span>
                <h2 className="text-2xl md:text-3xl font-bold">Now with AI-insights</h2>
              </div>
              
              <div className="space-y-4">
                <button className="bg-blue-500 hover:bg-blue-600 text-white px-8 py-4 rounded-lg text-lg font-semibold transition-colors duration-300 inline-flex items-center">
                  Start 14-day free trial
                  <ChevronRight className="w-5 h-5 ml-2" />
                </button>
                
                <div>
                  <button 
                    onClick={() => setCurrentPage(2)}
                    className="text-white underline hover:no-underline transition-all duration-300 inline-flex items-center"
                  >
                    <span className="mr-2">üìã</span>
                    See what we do
                  </button>
                </div>
              </div>
            </div>
          </div>

          {/* Navigation Button */}
          <button
            onClick={() => setCurrentPage(2)}
            className="fixed bottom-8 right-8 bg-red-500 hover:bg-red-600 text-white p-4 rounded-full transition-colors duration-300 shadow-lg"
          >
            <ChevronRight className="w-6 h-6" />
          </button>

          {/* Footer */}
          <footer className="bg-black bg-opacity-20 backdrop-blur-sm py-8">
            <div className="container mx-auto px-6 flex justify-center space-x-8">
              <Github className="w-6 h-6 hover:opacity-80 cursor-pointer transition-opacity" />
              <Linkedin className="w-6 h-6 hover:opacity-80 cursor-pointer transition-opacity" />
              <Mail className="w-6 h-6 hover:opacity-80 cursor-pointer transition-opacity" />
              <Shield className="w-6 h-6 hover:opacity-80 cursor-pointer transition-opacity" />
            </div>
          </footer>
        </div>
      )}

      {/* Page 2: Sliding Image Gallery */}
      {currentPage === 2 && (
        <div className="min-h-screen bg-white text-gray-900 py-20">
          <div className="container mx-auto px-6">
            <h2 className="text-4xl font-bold text-center mb-12">Image Gallery</h2>
            <div className="relative max-w-4xl mx-auto">
              <div className="overflow-hidden rounded-lg">
                <img 
                  src={slides[currentSlide]}
                  alt={`Slide ${currentSlide + 1}`}
                  className="w-full h-96 object-cover transition-transform duration-500"
                />
              </div>
              <button
                onClick={prevSlide}
                className="absolute left-4 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 text-white p-2 rounded-full hover:bg-opacity-70 transition-all"
              >
                <ArrowLeft className="w-6 h-6" />
              </button>
              <button
                onClick={nextSlide}
                className="absolute right-4 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 text-white p-2 rounded-full hover:bg-opacity-70 transition-all"
              >
                <ArrowRight className="w-6 h-6" />
              </button>
              <div className="flex justify-center mt-6 space-x-2">
                {slides.map((_, index) => (
                  <button
                    key={index}
                    onClick={() => setCurrentSlide(index)}
                    className={`w-3 h-3 rounded-full transition-all ${
                      index === currentSlide ? 'bg-blue-500' : 'bg-gray-300'
                    }`}
                  />
                ))}
              </div>
            </div>
            <div className="text-center mt-12">
              <button
                onClick={() => setCurrentPage(3)}
                className="bg-blue-500 hover:bg-blue-600 text-white px-8 py-3 rounded-lg transition-colors"
              >
                Next Page <ChevronRight className="inline w-5 h-5 ml-2" />
              </button>
            </div>
          </div>
        </div>
      )}

      {/* Page 3: Makeup Video Carousel */}
      {currentPage === 3 && (
        <div className="min-h-screen bg-pink-300 py-20">
          <div className="container mx-auto px-6">
            <h2 className="text-4xl font-bold text-center mb-12 text-gray-900">Makeup Video Carousel</h2>
            <div className="max-w-4xl mx-auto">
              <div className="bg-black rounded-lg p-8 text-center">
                <div className="bg-gray-800 rounded-lg p-8 mb-6">
                  <h3 className="text-white text-2xl mb-4">Before/After Packaging Effect</h3>
                  <div className="bg-gray-700 h-64 rounded-lg flex items-center justify-center">
                    <button
                      onClick={() => setIsPlaying(!isPlaying)}
                      className="bg-pink-500 hover:bg-pink-600 text-white p-4 rounded-full transition-colors"
                    >
                      {isPlaying ? <Pause className="w-8 h-8" /> : <Play className="w-8 h-8" />}
                    </button>
                  </div>
                </div>
                <div className="flex justify-center space-x-4">
                  <button className="bg-pink-500 hover:bg-pink-600 text-white px-6 py-2 rounded transition-colors">
                    Previous
                  </button>
                  <button className="bg-pink-500 hover:bg-pink-600 text-white px-6 py-2 rounded transition-colors">
                    Next
                  </button>
                </div>
              </div>
            </div>
            <div className="text-center mt-12">
              <button
                onClick={() => setCurrentPage(4)}
                className="bg-gray-900 hover:bg-gray-800 text-white px-8 py-3 rounded-lg transition-colors"
              >
                Continue <ChevronRight className="inline w-5 h-5 ml-2" />
              </button>
            </div>
          </div>
        </div>
      )}

      {/* Page 4: BSS/OSS Capabilities */}
      {currentPage === 4 && (
        <div className="min-h-screen bg-blue-100 py-20">
          <div className="container mx-auto px-6">
            <h2 className="text-4xl font-bold text-center mb-12 text-black">UNPARALLELED BSS/OSS CAPABILITIES</h2>
            <div className="max-w-6xl mx-auto">
              <div className="flex justify-center mb-8">
                {['Billing', 'Charging', 'Catalog', 'Events'].map((tab) => (
                  <button
                    key={tab}
                    onClick={() => setCurrentTab(tab)}
                    className={`px-6 py-3 mx-2 rounded-lg font-semibold transition-colors ${
                      currentTab === tab 
                        ? 'bg-blue-500 text-white' 
                        : 'bg-white text-gray-700 hover:bg-gray-50'
                    }`}
                  >
                    {tab}
                  </button>
                ))}
              </div>
              <div className="bg-white rounded-lg p-12 text-center shadow-lg">
                <h3 className="text-2xl font-bold text-black mb-4">REAL TIME CONVERGENT BILLING</h3>
                <p className="text-gray-600">Advanced billing capabilities for modern enterprises</p>
              </div>
            </div>
            <div className="text-center mt-12">
              <button
                onClick={() => setCurrentPage(5)}
                className="bg-blue-500 hover:bg-blue-600 text-white px-8 py-3 rounded-lg transition-colors"
              >
                View Customers <ChevronRight className="inline w-5 h-5 ml-2" />
              </button>
            </div>
          </div>
        </div>
      )}

      {/* Page 5: Tab & Customer Highlights */}
      {currentPage === 5 && (
        <div className="min-h-screen bg-black py-20">
          <div className="container mx-auto px-6">
            <div className="max-w-6xl mx-auto">
              <div className="flex flex-wrap justify-center mb-12">
                {['PERPLEXITY', 'SUPERCELL', 'MONZO', 'RAYCAST', 'RETOOL', 'MERCURY'].map((tab) => (
                  <button
                    key={tab}
                    onClick={() => setCurrentCustomerTab(tab)}
                    className={`px-4 py-2 m-2 rounded font-semibold transition-colors ${
                      currentCustomerTab === tab 
                        ? 'bg-white text-black' 
                        : 'bg-gray-800 text-white hover:bg-gray-700'
                    }`}
                  >
                    {tab}
                  </button>
                ))}
              </div>
              
              <div className="text-center mb-12">
                <h2 className="text-3xl font-bold text-white mb-8">OUR CUSTOMERS</h2>
                <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4">
                  {['RAMP', 'OPENAI', 'SCALE', 'BOOM', 'CASHAPP', 'VERCEL'].map((customer) => (
                    <div key={customer} className="bg-gray-800 text-white p-4 rounded text-center font-semibold">
                      {customer}
                    </div>
                  ))}
                </div>
              </div>
            </div>
            <div className="text-center mt-12">
              <button
                onClick={() => setCurrentPage(6)}
                className="bg-white text-black px-8 py-3 rounded-lg font-semibold hover:bg-gray-100 transition-colors"
              >
                Read Testimonials <ChevronRight className="inline w-5 h-5 ml-2" />
              </button>
            </div>
          </div>
        </div>
      )}

      {/* Page 6: Testimonials */}
      {currentPage === 6 && (
        <div className="min-h-screen bg-purple-600 py-20">
          <div className="container mx-auto px-6">
            <p className="text-white text-sm text-center mb-4">Customer Testimonials</p>
            <h2 className="text-5xl font-bold text-white text-center mb-12">Happy Sellers</h2>
            <div className="max-w-4xl mx-auto grid grid-cols-1 md:grid-cols-2 gap-8">
              {[
                {
                  name: "Sarah Johnson",
                  company: "TechCorp",
                  text: "This platform transformed our billing process completely. Highly recommended!"
                },
                {
                  name: "Michael Chen",
                  company: "StartupXYZ", 
                  text: "The AI insights feature saved us hours of manual analysis every week."
                },
                {
                  name: "Emily Rodriguez",
                  company: "GrowthCo",
                  text: "Best investment we made this year. The ROI is incredible."
                },
                {
                  name: "David Kim",
                  company: "ScaleUp",
                  text: "Customer support is amazing and the features are exactly what we needed."
                }
              ].map((testimonial, index) => (
                <div key={index} className="bg-white bg-opacity-10 backdrop-blur-sm rounded-lg p-6 text-white border border-white border-opacity-20">
                  <p className="mb-4 italic">"{testimonial.text}"</p>
                  <div className="font-semibold">
                    <p>{testimonial.name}</p>
                    <p className="text-sm opacity-80">{testimonial.company}</p>
                  </div>
                </div>
              ))}
            </div>
            <div className="text-center mt-12">
              <button
                onClick={() => setCurrentPage(7)}
                className="bg-white text-purple-600 px-8 py-3 rounded-lg font-semibold hover:bg-gray-100 transition-colors"
              >
                Learn More <ChevronRight className="inline w-5 h-5 ml-2" />
              </button>
            </div>
          </div>
        </div>
      )}

      {/* Page 7: About/Contact */}
      {currentPage === 7 && (
        <div className={`min-h-screen py-20 ${themeClass}`}>
          <div className="container mx-auto px-6">
            <div className="max-w-4xl mx-auto text-center">
              <h2 className="text-5xl font-bold mb-8">About Us</h2>
              <p className="text-xl mb-12 opacity-80">
                We're building the future of business intelligence and reporting. 
                Our platform combines powerful analytics with AI-driven insights to help 
                businesses make better decisions faster.
              </p>
              
              <div className="grid grid-cols-1 md:grid-cols-3 gap-8 mb-12">
                <div className="bg-white bg-opacity-10 backdrop-blur-sm rounded-lg p-6 border border-white border-opacity-20">
                  <h3 className="text-2xl font-bold mb-4">Our Mission</h3>
                  <p className="opacity-80">Democratizing business intelligence for companies of all sizes.</p>
                </div>
                <div className="bg-white bg-opacity-10 backdrop-blur-sm rounded-lg p-6 border border-white border-opacity-20">
                  <h3 className="text-2xl font-bold mb-4">Our Vision</h3>
                  <p className="opacity-80">A world where every business decision is data-driven.</p>
                </div>
                <div className="bg-white bg-opacity-10 backdrop-blur-sm rounded-lg p-6 border border-white border-opacity-20">
                  <h3 className="text-2xl font-bold mb-4">Our Values</h3>
                  <p className="opacity-80">Innovation, transparency, and customer success.</p>
                </div>
              </div>

              <div className="flex justify-center space-x-4">
                <button
                  onClick={() => setCurrentPage(1)}
                  className="bg-blue-500 hover:bg-blue-600 text-white px-8 py-3 rounded-lg transition-colors"
                >
                  Back to Home
                </button>
                <button className="bg-green-500 hover:bg-green-600 text-white px-8 py-3 rounded-lg transition-colors">
                  Contact Us
                </button>
              </div>
            </div>
          </div>
        </div>
      )}

      {/* Page Navigation */}
      <div className="fixed bottom-4 left-1/2 transform -translate-x-1/2 flex space-x-2 z-30">
        {[1, 2, 3, 4, 5, 6, 7].map((page) => (
          <button
            key={page}
            onClick={() => setCurrentPage(page)}
            className={`w-3 h-3 rounded-full transition-all ${
              page === currentPage 
                ? 'bg-white' 
                : 'bg-white bg-opacity-30 hover:bg-opacity-50'
            }`}
          />
        ))}
      </div>
    </div>
  );
};

export default Index;
